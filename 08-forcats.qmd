---
title: "Section 8: `forcats`"
author: "Matt Higham"
format: 
  html:
    embed-resources: true
---

## Class Exercises

Class Exercise 4.

```{r}
library(tidyverse)
responses_df <- read_csv("https://raw.githubusercontent.com/highamm/ds234_quarto/main/data_online/heatmap.csv",
                         col_types = cols(
                           time = col_factor(),
                           challenge = col_factor()
                         ))

responses_sum <- responses_df |>
  mutate(time = fct_recode(time,
                           "Most Time" = "1",
                           "Second" = "2",
                           "Third" = "3",
                           "Least Time" = "4"),
         challenge = fct_recode(challenge,
                                "Most Challenge" = "1",
                                "Second" = "2",
                                "Third" = "3",
                                "Least Challenge" = "4")) |> group_by(time, challenge, .drop = FALSE) |>
  summarise(n_students = n()) |>
  mutate(time = fct_relevel(time, c("Most Time",
                                   "Second",
                                   "Third",
                                   "Least Time")),
         challenge = fct_relevel(challenge,
                                 c("Most Challenge",
                                   "Second",
                                   "Third",
                                   "Least Challenge"))) |>
  mutate(time = fct_rev(time))
  
ggplot(data = responses_sum, aes(x = challenge,
                                 y = time)) +
  geom_tile(aes(fill = n_students)) +
  scale_fill_viridis_c() +
  theme_minimal() +
  scale_x_discrete(position = "top")
```

Class Exercise 5.

```{r}
## want data frame to be 4 rows to make a lollipop plot of challenge
responses_challenge <- responses_sum |>
  group_by(challenge) |>
  summarise(n_total = sum(n_students)) |>
  mutate(challenge = fct_relevel(challenge,
                                 c("Most Challenge",
                                   "Second", 
                                   "Third", 
                                   "Least Challenge"))) |>
  mutate(challenge = fct_rev(challenge))
ggplot(data = responses_challenge, aes(x = challenge,
                                       y = n_total)) +
  geom_segment(aes(xend = challenge, y = 0, yend = n_total)) +
  geom_point() +
  coord_flip() +
  theme_minimal()

responses_df |> group_by(time) |>
  summarise(n_total = n())
## can then proceed to make lollipop plot with similar steps

## in the lollipop plot, it's a lot easier to see the exact
## count of students with each response (which is harder to 
## see in the coloured heat map).
```

## Your Turn

```{r}
library(tidyverse)
library(here)
standings_df <- read_csv(here("data/standings.csv"))
standings_df
```

Your Turn 1.

```{r}
table(standings_df$team_name)
```

Your Turn 2.

```{r}
standings_clean <- standings_df |>
  mutate(team_name = fct_recode(team_name,
                                Commanders = "Redskins")) |>
  unite(col = "franchise", c(team, team_name),
        sep = " ") |>
  mutate(franchise = fct_collapse(franchise,
                                  `San Diego LA Chargers` = c("San Diego Chargers", "Los Angeles Chargers"),
                                  `St. Louis LA Ram` = c("St. Louis Rams", "Los Angeles Rams")))

standings_ten <- standings_clean |> filter(playoffs == "Playoffs") |>
  group_by(franchise) |>
  summarise(n_playoffs = n()) |>
  arrange(desc(n_playoffs)) |>
  slice(1:10)

ggplot(data = standings_ten, aes(x = franchise, y = n_playoffs)) +
  geom_segment(aes(xend = franchise, y = 0, yend = n_playoffs)) +
  geom_point() +
  coord_flip() +
  theme_minimal()
```